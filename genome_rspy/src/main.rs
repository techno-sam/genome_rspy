use packed_genome::{indexed_packed_sequence, IndexedPackedSequence, PackedSequence, SimplePackedSequence};

fn main() {
    let seq = &"TTCAGCCGAACTGGATCAGAACGGATAGTATATCGACACCGCACTCCGGCTTCATTCATGCACG
        ATACCACGATTTGAACTAGAAGAAGCTCGAAGCATTCCCTCTGGTTATAACTCATATTCAAATTCGAATTGA
        AAAGGAAATTATACGGATAAGTGACGCGTGTTAGTTACATCAGTGCAGCTCGTGAATTTTGCCAGTACACGG
        TCTCGGATCCCATGGTGCCGCAGCGCCGGAGGCCGTGACGTGCAGTTCTACTCATATCTCAGCGCTTGAAAA
        CTTCCAGATAGCACAAGGCTACACGGTGCACCGTCAGGTATTTTTATGACGACAACCATCTGTCAAGTTGCA
        TGGCCGCTGCATATCTCTTGCAGGCTCTACAATGAGGGGGACCGACCAGCTGACATTTCGGAGTTGCGAGTC
        CCGTGCTCTAAAACCTTTGCTTCGCGCCAGGTAAGACAGCTGAGCGCATGACTGTGCGTGTCCGCTTAGAGT
        ATCTCCACTGCGATATTAGACACCACTGTTACCCGCGTACTGCGGCCGACCCAATACATACACAGAAAACTA
        CCCACAGAGCTCACTCTGCGCGTGGGAATTAGCTGATCAAGTTCACGATAGTCGTACTACTCCATTCCGGTG
        GCACGGGGAGATGTCGTTAATGGACTTCTCCGCAATACTAACGCTAATTTTGCCTTTGAGTATTCATAAAAG
        ACCCGACGTGTACATCGAGCAATCATAGGTTCAGATGAATCCGTCGCAACCGTTAAATTTGTGGGGTTGGGC
        ACCGTTTGGATATCCGATCGGGTTAAGCTGTCGCTCCGGACGCTGCCGATAGACACGCGCAAATGTATATTA
        GAGCGTATTGCACTTGTTGGCGGAGACGTGCAGGTTGTAACGCGTTATGCAGACGGGGTGGCTCCCCGCTCT
        ATTAAAGTGGTTCTCGTAATGGTCTTCGCAGACCACGGTGCCTGCGGCCTAATCGATTTTTTCACTGCCTTG"
        .replace("\n", "").replace(" ", "");

    println!("Sequence: {seq}\n");

    let packed = indexed_packed_sequence!(seq, 4);
    println!("Packed: {}", packed);

    let mut start = None;

    loop {
        start = packed.find_bounded_str("GGGGACCG", start, None);
        
        start = match start {
            Some(s) => {
                println!("Found needle starting at {}", s);
                Some(s+1)
            },
            None => break
        };
    }

    for v in SimplePackedSequence::new("AGTTAAGCTGTCGCTCCGGACGCTGCCGATAGACACGCGCAAATGTATATTA").subsections(7) {
        println!("Subsection: {}", v);
    }

    for v in SimplePackedSequence::new("ACT").subsections(7) {
        println!("Subsection: {}", v);
    }
}
