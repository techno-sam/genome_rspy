name: CI
on: workflow_dispatch

env:
  CARGO_TERM_COLOR: always

# From: https://github.com/fastlmm/bed-reader/blob/mar2023/.github/workflows/ci.yml

# Good docs:
#    https://docs.github.com/en/actions/guides/building-and-testing-python (including how to run flake8)
#    https://github.community/t/how-to-run-steps-involving-environment-variables-on-both-linux-and-windows/17355
# Good examples:
#    https://github.com/Intsights/fastzy/blob/152aecbb05302b0f8db7f23b0242b448ec5e6435/.github/workflows/deploy.yml
#    https://github.com/polkascan/py-ed25519-bindings/blob/96638152c1902d917b8ec29adabe9cc8c3519086/.github/workflows/test.yml
#    https://github.com/OpenMined/syft_experimental/blob/6630fec206d153fb5a94ad8c5365636ee462ecd9/.github/workflows/python.yml

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        python-version: ["3.10", "3.11"]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Checkout testdir
      uses: actions/checkout@v3
      with:
        path: testdir
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{matrix.python-version}}

    - name: Install
      run: |
        cd genome_rspy
        python -m pip install --upgrade pip

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    - name: Install Maturin
      run: python -m pip install --upgrade pip maturin

    - name: Test Rust
      run: cargo test --verbose --no-default-features

    - name: Build wheel with Maturin - Linux
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        maturin list-python
        docker run --rm -v $(pwd):/io ghcr.io/pyo3/maturin build --release --out target/wheels -i python${{matrix.python-version}}
        ls -las target/wheels
        cp target/wheels/*manylinux_*.whl .
      shell: bash

    - name: Build sdist with Maturin - Linux
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.10'
      run: |
        maturin list-python
        docker run --rm -v $(pwd):/io ghcr.io/pyo3/maturin sdist --out target/wheels
        ls -las target/wheels
      shell: bash

    - name: Build wheel with Maturin - Non-Linux
      if: "!startsWith(matrix.os, 'ubuntu')"
      run: |
        maturin list-python
        maturin build --release -i $(which python)
        ls -las target/wheels
        cp target/wheels/*.whl .
      shell: bash

    - name: Save Wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: ./*.whl
        
    - name: Save SDist
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.10'
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: target/wheels/*.tar.gz
